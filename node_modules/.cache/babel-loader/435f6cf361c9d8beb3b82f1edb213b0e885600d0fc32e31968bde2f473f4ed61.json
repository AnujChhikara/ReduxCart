{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./UiSlice\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemFromCart(state, action) {\n      const newItem = action.payload;\n      const exitingitem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!exitingitem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        exitingitem.quantity++;\n        exitingitem.totalPrice = exitingitem.totalPrice + newItem.price;\n      }\n    },\n    RemoveItemFromCart(state, action) {\n      const id = action.payload;\n      const exitingitem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (exitingitem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exitingitem.quantity--;\n        exitingitem.totalPrice = exitingitem.totalPrice - exitingitem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://backendredux-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success..',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error..',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemFromCart","state","action","newItem","payload","exitingitem","find","item","id","push","price","quantity","totalPrice","title","RemoveItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["E:/js/6feb/1/01-starting-project/src/components/store/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./UiSlice\";\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState: {\r\n        items:[],\r\n        totalQuantity :0\r\n    },\r\n    reducers:{\r\n        addItemFromCart(state, action){\r\n            const newItem = action.payload\r\n            const exitingitem = state.items.find((item)=> item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            if(!exitingitem){\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price:newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                name:newItem.title\r\n            });\r\n            }\r\n            else{\r\n                exitingitem.quantity++;\r\n                exitingitem.totalPrice = exitingitem.totalPrice + newItem.price\r\n            }\r\n\r\n        },\r\n        RemoveItemFromCart(state, action){\r\n            const id = action.payload;\r\n            const exitingitem = state.items.find((item)=> item.id === id);\r\n            state.totalQuantity--;\r\n\r\n            if (exitingitem.quantity === 1) {\r\n                state.items = state.items.filter(item=> item.id !== id)\r\n            } \r\n            else{\r\n                exitingitem.quantity--\r\n                exitingitem.totalPrice = exitingitem.totalPrice - exitingitem.price\r\n            }\r\n\r\n        }\r\n      \r\n    }\r\n});\r\n\r\n\r\nexport const sendCartData = (cart) => {\r\n\r\n    return async (dispatch)=> {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title:'Sending',\r\n            message:'Sending cart data!'\r\n          }))\r\n\r\n          const sendRequest = async () => {\r\n            const response = await fetch('https://backendredux-default-rtdb.firebaseio.com/cart.json', {\r\n                method:'PUT',\r\n                body: JSON.stringify(cart)\r\n              });\r\n          \r\n              if(!response.ok){\r\n                throw new Error('Sending cart data failed!') }\r\n          }\r\n          try {\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title:'Success..',\r\n                message:'Sent cart data successfully!'\r\n              })) \r\n            \r\n          } catch (error) {\r\n                dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title:'Error..',\r\n                message:'Sent cart data failed!'\r\n                }))         \r\n          }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}