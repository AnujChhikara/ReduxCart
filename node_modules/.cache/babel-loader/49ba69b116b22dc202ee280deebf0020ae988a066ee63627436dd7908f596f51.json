{"ast":null,"code":"import { uiActions } from \"./UiSlice\";\nimport { cartActions } from \"./CartSlice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch('https://backendredux-default-rtdb.firebaseio.com/cart.json');\n      if (!response.ok) {\n        throw new Error('Could not fetch cart data!');\n      }\n      const data = await response.json();\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items || [],\n        totalQuantity: cartData.totalQuantity\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error!',\n        message: 'Fetching cart data failed!'\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://backendredux-default-rtdb.firebaseio.com/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Sending cart data failed!');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success..',\n        message: 'Sent cart data successfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error..',\n        message: 'Sent cart data failed!'\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","totalQuantity","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify"],"sources":["E:/js/6feb/1/01-starting-project/src/components/store/cartAction.js"],"sourcesContent":["import { uiActions } from \"./UiSlice\";\r\nimport { cartActions } from \"./CartSlice\";\r\n\r\n\r\nexport const fetchCartData = () => {\r\n    return async (dispatch) => {\r\n      const fetchData = async () => {\r\n        const response = await fetch(\r\n          'https://backendredux-default-rtdb.firebaseio.com/cart.json'\r\n        );\r\n  \r\n        if (!response.ok) {\r\n          throw new Error('Could not fetch cart data!');\r\n        }\r\n  \r\n        const data = await response.json();\r\n  \r\n        return data;\r\n      };\r\n  \r\n      try {\r\n        const cartData = await fetchData();\r\n        dispatch(\r\n          cartActions.replaceCart({\r\n            items: cartData.items || [],\r\n            totalQuantity: cartData.totalQuantity,\r\n          })\r\n        );\r\n      } catch (error) {\r\n        dispatch(\r\n          uiActions.showNotification({\r\n            status: 'error',\r\n            title: 'Error!',\r\n            message: 'Fetching cart data failed!',\r\n          })\r\n        );\r\n      }\r\n    };\r\n  };\r\n  \r\n\r\nexport const sendCartData = (cart) => {\r\n\r\n    return async (dispatch)=> {\r\n        dispatch(uiActions.showNotification({\r\n            status: 'pending',\r\n            title:'Sending',\r\n            message:'Sending cart data!'\r\n          }))\r\n\r\n          const sendRequest = async () => {\r\n            const response = await fetch('https://backendredux-default-rtdb.firebaseio.com/cart.json', {\r\n                method:'PUT',\r\n                body: JSON.stringify({items: cart.items, totalQuantity: cart.totalQuantity})\r\n              });\r\n          \r\n              if(!response.ok){\r\n                throw new Error('Sending cart data failed!') }\r\n          }\r\n          try {\r\n            await sendRequest();\r\n\r\n            dispatch(uiActions.showNotification({\r\n                status: 'success',\r\n                title:'Success..',\r\n                message:'Sent cart data successfully!'\r\n              })) \r\n            \r\n          } catch (error) {\r\n                dispatch(uiActions.showNotification({\r\n                status: 'error',\r\n                title:'Error..',\r\n                message:'Sent cart data failed!'\r\n                }))         \r\n          }\r\n\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AACrC,SAASC,WAAW,QAAQ,aAAa;AAGzC,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO,MAAOC,QAAQ,IAAK;IACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,4DACF,CAAC;MAED,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;MAC/C;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,OAAOD,IAAI;IACb,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,CAAC,CAAC;MAClCD,QAAQ,CACNF,WAAW,CAACW,WAAW,CAAC;QACtBC,KAAK,EAAEF,QAAQ,CAACE,KAAK,IAAI,EAAE;QAC3BC,aAAa,EAAEH,QAAQ,CAACG;MAC1B,CAAC,CACH,CAAC;IACH,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdZ,QAAQ,CACNH,SAAS,CAACgB,gBAAgB,CAAC;QACzBC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAE,QAAQ;QACfC,OAAO,EAAE;MACX,CAAC,CACH,CAAC;IACH;EACF,CAAC;AACH,CAAC;AAGH,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAElC,OAAO,MAAOlB,QAAQ,IAAI;IACtBA,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;MAChCC,MAAM,EAAE,SAAS;MACjBC,KAAK,EAAC,SAAS;MACfC,OAAO,EAAC;IACV,CAAC,CAAC,CAAC;IAEH,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,MAAMjB,QAAQ,GAAG,MAAMC,KAAK,CAAC,4DAA4D,EAAE;QACvFiB,MAAM,EAAC,KAAK;QACZC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACb,KAAK,EAAEQ,IAAI,CAACR,KAAK;UAAEC,aAAa,EAAEO,IAAI,CAACP;QAAa,CAAC;MAC7E,CAAC,CAAC;MAEF,IAAG,CAACT,QAAQ,CAACE,EAAE,EAAC;QACd,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAAC;IACnD,CAAC;IACD,IAAI;MACF,MAAMc,WAAW,CAAC,CAAC;MAEnBnB,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;QAChCC,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAC,WAAW;QACjBC,OAAO,EAAC;MACV,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACVZ,QAAQ,CAACH,SAAS,CAACgB,gBAAgB,CAAC;QACpCC,MAAM,EAAE,OAAO;QACfC,KAAK,EAAC,SAAS;QACfC,OAAO,EAAC;MACR,CAAC,CAAC,CAAC;IACT;EAEN,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}