{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: false\n  },\n  reducers: {\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    },\n    addItemFromCart(state, action) {\n      const newItem = action.payload;\n      const exitingitem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n      if (!exitingitem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        exitingitem.quantity++;\n        exitingitem.totalPrice = exitingitem.totalPrice + newItem.price;\n      }\n    },\n    RemoveItemFromCart(state, action) {\n      const id = action.payload;\n      const exitingitem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n      if (exitingitem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exitingitem.quantity--;\n        exitingitem.totalPrice = exitingitem.totalPrice - exitingitem.price;\n      }\n    }\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","replaceCart","state","action","payload","addItemFromCart","newItem","exitingitem","find","item","id","push","price","quantity","totalPrice","title","RemoveItemFromCart","filter","cartActions","actions"],"sources":["E:/js/6feb/1/01-starting-project/src/components/store/CartSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst cartSlice = createSlice({\r\n    name:'cart',\r\n    initialState: {\r\n        items:[],\r\n        totalQuantity :0,\r\n        changed: false\r\n    },\r\n    reducers:{\r\n        replaceCart(state, action){\r\n            state.totalQuantity = action.payload.totalQuantity\r\n            state.items = action.payload.items\r\n        },\r\n\r\n        addItemFromCart(state, action){\r\n            const newItem = action.payload\r\n            const exitingitem = state.items.find((item)=> item.id === newItem.id)\r\n            state.totalQuantity++;\r\n            state.changed = true;\r\n\r\n            if(!exitingitem){\r\n                state.items.push({\r\n                    id: newItem.id,\r\n                    price:newItem.price,\r\n                    quantity: 1,\r\n                    totalPrice: newItem.price,\r\n                name:newItem.title\r\n            });\r\n            }\r\n            else{\r\n                exitingitem.quantity++;\r\n                exitingitem.totalPrice = exitingitem.totalPrice + newItem.price\r\n            }\r\n\r\n        },\r\n        RemoveItemFromCart(state, action){\r\n            const id = action.payload;\r\n            const exitingitem = state.items.find((item)=> item.id === id);\r\n            state.totalQuantity--;\r\n            state.changed = true;\r\n\r\n            if (exitingitem.quantity === 1) {\r\n                state.items = state.items.filter(item=> item.id !== id)\r\n            } \r\n            else{\r\n                exitingitem.quantity--\r\n                exitingitem.totalPrice = exitingitem.totalPrice - exitingitem.price\r\n            }\r\n\r\n        }\r\n      \r\n    }\r\n});\r\n\r\n\r\n\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAE;IACVC,KAAK,EAAC,EAAE;IACRC,aAAa,EAAE,CAAC;IAChBC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAC;IACLC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAC;MACtBD,KAAK,CAACJ,aAAa,GAAGK,MAAM,CAACC,OAAO,CAACN,aAAa;MAClDI,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACtC,CAAC;IAEDQ,eAAeA,CAACH,KAAK,EAAEC,MAAM,EAAC;MAC1B,MAAMG,OAAO,GAAGH,MAAM,CAACC,OAAO;MAC9B,MAAMG,WAAW,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,OAAO,CAACI,EAAE,CAAC;MACrER,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;MAEpB,IAAG,CAACQ,WAAW,EAAC;QACZL,KAAK,CAACL,KAAK,CAACc,IAAI,CAAC;UACbD,EAAE,EAAEJ,OAAO,CAACI,EAAE;UACdE,KAAK,EAACN,OAAO,CAACM,KAAK;UACnBC,QAAQ,EAAE,CAAC;UACXC,UAAU,EAAER,OAAO,CAACM,KAAK;UAC7BjB,IAAI,EAACW,OAAO,CAACS;QACjB,CAAC,CAAC;MACF,CAAC,MACG;QACAR,WAAW,CAACM,QAAQ,EAAE;QACtBN,WAAW,CAACO,UAAU,GAAGP,WAAW,CAACO,UAAU,GAAGR,OAAO,CAACM,KAAK;MACnE;IAEJ,CAAC;IACDI,kBAAkBA,CAACd,KAAK,EAAEC,MAAM,EAAC;MAC7B,MAAMO,EAAE,GAAGP,MAAM,CAACC,OAAO;MACzB,MAAMG,WAAW,GAAGL,KAAK,CAACL,KAAK,CAACW,IAAI,CAAEC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC7DR,KAAK,CAACJ,aAAa,EAAE;MACrBI,KAAK,CAACH,OAAO,GAAG,IAAI;MAEpB,IAAIQ,WAAW,CAACM,QAAQ,KAAK,CAAC,EAAE;QAC5BX,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACoB,MAAM,CAACR,IAAI,IAAGA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC;MAC3D,CAAC,MACG;QACAH,WAAW,CAACM,QAAQ,EAAE;QACtBN,WAAW,CAACO,UAAU,GAAGP,WAAW,CAACO,UAAU,GAAGP,WAAW,CAACK,KAAK;MACvE;IAEJ;EAEJ;AACJ,CAAC,CAAC;AAKF,OAAO,MAAMM,WAAW,GAAGxB,SAAS,CAACyB,OAAO;AAE5C,eAAezB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}